name: Build RESTful API binaries

on:
  push:
  workflow_dispatch:

permissions:
  actions: write
  contents: read

concurrency: 
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  rest-api-build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
          - os: macos-11
            target: x86_64-apple-darwin
          - os: macos-11
            target: aarch64-apple-darwin
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - uses: rui314/setup-mold@v1

      - name: Remove .cargo/config.toml to use 'mold' forcibly
        run: rm .cargo/config.toml

      # Install our target.
      - run: rustup target add ${{ matrix.target }}

      - uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --target ${{ matrix.target }} --release --bin unm_rest_api
      - uses: actions/upload-artifact@v3
        with:
          name: unm-rest-api-${{ matrix.os }}-${{ matrix.target }}
          path: |
            ./target/${{ matrix.target }}/release/unm_rest_api*
    
  rest-api-publish:
    if: startsWith(github.ref, 'refs/tags/')
    needs: rest-api-build
    runs-on: ubuntu-latest

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: ./artifacts

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: ./artifacts/*
          draft: true
